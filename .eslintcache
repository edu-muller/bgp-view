[{"D:\\UPF\\TCC\\Desenvolvimento\\bgp-view\\src\\index.js":"1","D:\\UPF\\TCC\\Desenvolvimento\\bgp-view\\src\\App.js":"2","D:\\UPF\\TCC\\Desenvolvimento\\bgp-view\\src\\reportWebVitals.js":"3","D:\\UPF\\TCC\\Desenvolvimento\\bgp-view\\src\\maps\\world.js":"4","D:\\UPF\\TCC\\Desenvolvimento\\bgp-view\\src\\components\\tabela.js":"5","D:\\UPF\\TCC\\Desenvolvimento\\bgp-view\\src\\components\\ReactTable.js":"6","D:\\UPF\\TCC\\Desenvolvimento\\bgp-view\\src\\components\\CustomInput.js":"7"},{"size":9437,"mtime":1616113855742,"results":"8","hashOfConfig":"9"},{"size":528,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":217761,"mtime":1612223001823,"results":"12","hashOfConfig":"9"},{"size":884,"mtime":1614917885459,"results":"13","hashOfConfig":"9"},{"size":4933,"mtime":1615958212079,"results":"14","hashOfConfig":"9"},{"size":406,"mtime":1615951559405,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"847uul",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},"D:\\UPF\\TCC\\Desenvolvimento\\bgp-view\\src\\index.js",["34","35"],"D:\\UPF\\TCC\\Desenvolvimento\\bgp-view\\src\\App.js",[],"D:\\UPF\\TCC\\Desenvolvimento\\bgp-view\\src\\reportWebVitals.js",[],"D:\\UPF\\TCC\\Desenvolvimento\\bgp-view\\src\\maps\\world.js",[],["36","37"],"D:\\UPF\\TCC\\Desenvolvimento\\bgp-view\\src\\components\\tabela.js",[],["38","39"],"D:\\UPF\\TCC\\Desenvolvimento\\bgp-view\\src\\components\\ReactTable.js",["40"],"// Credit https://medium.com/@blaiseiradukunda/react-table-7-tutorial-3d8ba6ac8b16\r\nimport React from \"react\";\r\nimport { useTable, useSortBy, useFilters, useFlexLayout, useResizeColumns } from \"react-table\";\r\nimport CustomInput from \"./CustomInput\";\r\n\r\nwindow.Date.prototype.isValid = function () {\r\n  // An invalid date object returns NaN for getTime() and NaN is the only\r\n  // object not strictly equal to itself.\r\n  // eslint-disable-next-line\r\n  return this.getTime() === this.getTime();\r\n};\r\n\r\nconst ColumnFilter = ({ column: { filterValue, setFilter, filter } }) => {\r\n  return (\r\n    <CustomInput\r\n      value={filterValue || \"\"}\r\n      onChange={e => {\r\n        setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\r\n      }}\r\n      placeholder={`Search ${filter ? filter : \"\"}...`}\r\n    />\r\n  );\r\n};\r\n\r\n/**\r\n * As in the previous versions, any react table needs colums where at the core we have a field Header, and accessor\r\n * As in the previous versions, a react table has data that consist of an array of JSONs\r\n */\r\nconst ReactTable = ({ columns, data }) => {\r\n  // functions to run when a column is filtered depending on the type\r\n  const filterTypes = {\r\n    year: (rows, id, filterValue) => {\r\n      return rows.filter(row => {\r\n        const rowValue = row.values[id];\r\n        return rowValue !== undefined &&\r\n          Number(filterValue) &&\r\n          new Date(rowValue) &&\r\n          new Date(rowValue).isValid()\r\n          ? new Date(rowValue).getFullYear() === Number(filterValue)\r\n          : true;\r\n      });\r\n    },\r\n    text: (rows, id, filterValue) => {\r\n      return rows.filter(row => {\r\n        const rowValue = row.values[id];\r\n        return rowValue !== undefined\r\n          ? String(rowValue)\r\n            .toLowerCase()\r\n            .startsWith(String(filterValue).toLowerCase())\r\n          : true;\r\n      });\r\n    }\r\n  };\r\n  const defaultColumn = React.useMemo(() => ({\r\n    // Let's set up our default Filter UI\r\n    Filter: ColumnFilter,\r\n    minWidth: 40,\r\n    maxWidth: 400\r\n  }), [])\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    state,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn,\r\n      filterTypes\r\n    },\r\n    // hooks for filters\r\n    useFilters,\r\n    // hook for sorting\r\n    useSortBy,\r\n    // hooks for resizing\r\n    useFlexLayout,\r\n    useResizeColumns\r\n  );\r\n  return (\r\n    <div>\r\n      <div className=\"p-1 border-0 d-flex justify-content-end\">\r\n      </div>\r\n      <div className='table' {...getTableProps()}>\r\n        <div >\r\n          {headerGroups.map(headerGroup => (\r\n            <div {...headerGroup.getHeaderGroupProps()} className='tr'>\r\n              {headerGroup.headers.map((column, i) => {\r\n                // three new addition to column: isSorted, isSortedDesc, getSortByToggleProps\r\n                const {\r\n                  render,\r\n                  getHeaderProps,\r\n                  isSorted,\r\n                  isSortedDesc,\r\n                  getSortByToggleProps,\r\n                  // filter,\r\n                  canFilter,\r\n                  //resizer\r\n                  isResizing,\r\n                  getResizerProps                \r\n                } = column;\r\n                const extraClass = isSorted\r\n                  ? isSortedDesc\r\n                    ? \"desc\"\r\n                    : \"asc\"\r\n                  : \"\";\r\n                const {onClick , ...rest} = getHeaderProps(getSortByToggleProps())\r\n                //-= console.log('click', onClick, 'rest',rest)\r\n                return (\r\n                  <div\r\n                    key={`th-${i}`}\r\n                    className={`${extraClass} th`}\r\n                    {...rest}\r\n                  // getHeaderProps now receives a function\r\n                  >\r\n                    <div onClick={onClick}>\r\n                      {render(\"Header\")}\r\n                    </div>\r\n                    {/* resizer div */}\r\n                    <div\r\n                      {...getResizerProps()}\r\n                      className={`resizer ${isResizing ? 'isResizing' : ''}`}\r\n                    />\r\n                    {/* Render the columns filter UI */}\r\n                    <div>{canFilter ? render(\"Filter\") : null}</div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div {...getTableBodyProps()}>\r\n          {rows.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <div {...row.getRowProps()} className=\"tr\">\r\n                {row.cells.map(cell => {\r\n                  return (\r\n                    <div {...cell.getCellProps()} className=\"td\">{cell.render(\"Cell\")}</div>\r\n                  );\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReactTable;","D:\\UPF\\TCC\\Desenvolvimento\\bgp-view\\src\\components\\CustomInput.js",["41"],"import React from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nexport default props => {\r\n  let { placeholder, name, value, onChange = () => null } = props;\r\n  return (\r\n    // <div class=\"col-lg\">\r\n    <Form.Group>\r\n      <Form.Control\r\n        placeholder={placeholder}\r\n        name={name}\r\n        value={value ? value : \"\"}\r\n        onChange={onChange}\r\n      />\r\n    </Form.Group>\r\n  );\r\n};\r\n",{"ruleId":"42","severity":1,"message":"43","line":176,"column":20,"nodeType":"44","messageId":"45","endLine":176,"endColumn":22},{"ruleId":"42","severity":1,"message":"43","line":177,"column":19,"nodeType":"44","messageId":"45","endLine":177,"endColumn":21},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"46","replacedBy":"50"},{"ruleId":"48","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":66,"column":5,"nodeType":"54","messageId":"55","endLine":66,"endColumn":10},{"ruleId":"56","severity":1,"message":"57","line":4,"column":1,"nodeType":"58","endLine":17,"endColumn":3},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["59"],"no-negated-in-lhs",["60"],["59"],["60"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]